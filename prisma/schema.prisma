generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  student
  instructor
}

enum DifficultyLevel {
  beginner
  intermediate
  advanced
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  fullName String
  role     Role

  // Relations
  courses     Course[]     @relation("InstructorCourses")
  enrollments Enrollment[] @relation("StudentEnrollments")
  questions   Question[] // ðŸ‘ˆ Add this line
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
}

model Course {
  id          Int     @id @default(autoincrement())
  title       String
  description String
  imageUrl    String?
  category    String?
  level       String  @default("beginner") // or another default valueÆ’
  duration    Int? // in minutes
  price       Float?
  language    String?
  published   Boolean @default(false)

  instructor   User         @relation("InstructorCourses", fields: [instructorId], references: [id])
  instructorId Int
  lessons      Lesson[]
  enrollments  Enrollment[]
  createdAt    DateTime     @default(now())
}

model Lesson {
  id        Int        @id @default(autoincrement())
  title     String
  content   String
  course    Course     @relation(fields: [courseId], references: [id])
  courseId  Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) // âœ… This is what you need
  questions Question[]
}

model Enrollment {
  id        Int      @id @default(autoincrement())
  student   User     @relation("StudentEnrollments", fields: [studentId], references: [id])
  studentId Int
  course    Course   @relation(fields: [courseId], references: [id])
  courseId  Int
  createdAt DateTime @default(now())

  @@unique([studentId, courseId])
}

model Question {
  id        Int      @id @default(autoincrement())
  content   String
  answer    String? // null if unanswered
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  lesson    Lesson   @relation(fields: [lessonId], references: [id])
  lessonId  Int
  student   User     @relation(fields: [studentId], references: [id])
  studentId Int
}
